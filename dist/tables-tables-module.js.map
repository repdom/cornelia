{"version":3,"sources":["webpack:///./src/app/layout/tables/tables-routing.module.ts","webpack:///./src/app/layout/tables/tables.component.html","webpack:///./src/app/layout/tables/tables.component.scss","webpack:///./src/app/layout/tables/tables.component.ts","webpack:///./src/app/layout/tables/tables.module.ts"],"names":[],"mappings":"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","file":"tables-tables-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { TablesComponent } from './tables.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: TablesComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class TablesRoutingModule {}\r\n","module.exports = \"<mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <!-- ID Column -->\\r\\n        <ng-container matColumnDef=\\\"id\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Progress Column -->\\r\\n        <ng-container matColumnDef=\\\"progress\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Name Column -->\\r\\n        <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Color Column -->\\r\\n        <ng-container matColumnDef=\\\"color\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Color </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> {{row.color}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3RhYmxlcy9IOlxcUHJvamVjdHNcXFdFQlBVQ01NXFxjb3JDbGllbnQvc3JjXFxhcHBcXGxheW91dFxcdGFibGVzXFx0YWJsZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFXLEVBQ2Q7O0FBRUQ7RUFDSSxnQkFBZTtFQUNmLFlBQVcsRUFDZDs7QUFFRDs7RUFFSSxXQUFVLEVBQ2IiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvdGFibGVzL3RhYmxlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbnRkLFxyXG50aCB7XHJcbiAgICB3aWR0aDogMjUlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\n\r\n@Component({\r\n    selector: 'app-tables',\r\n    templateUrl: './tables.component.html',\r\n    styleUrls: ['./tables.component.scss']\r\n})\r\nexport class TablesComponent implements OnInit {\r\n    displayedColumns = ['id', 'name', 'progress', 'color'];\r\n    dataSource: MatTableDataSource<UserData>;\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    constructor() {\r\n        // Create 100 users\r\n        const users: UserData[] = [];\r\n        for (let i = 1; i <= 100; i++) {\r\n            users.push(createNewUser(i));\r\n        }\r\n\r\n        // Assign the data to the data source for the table to render\r\n        this.dataSource = new MatTableDataSource(users);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    applyFilter(filterValue: string) {\r\n        filterValue = filterValue.trim(); // Remove whitespace\r\n        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n        this.dataSource.filter = filterValue;\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst COLORS = [\r\n    'maroon',\r\n    'red',\r\n    'orange',\r\n    'yellow',\r\n    'olive',\r\n    'green',\r\n    'purple',\r\n    'fuchsia',\r\n    'lime',\r\n    'teal',\r\n    'aqua',\r\n    'blue',\r\n    'navy',\r\n    'black',\r\n    'gray'\r\n];\r\nconst NAMES = [\r\n    'Maia',\r\n    'Asher',\r\n    'Olivia',\r\n    'Atticus',\r\n    'Amelia',\r\n    'Jack',\r\n    'Charlotte',\r\n    'Theodore',\r\n    'Isla',\r\n    'Oliver',\r\n    'Isabella',\r\n    'Jasper',\r\n    'Cora',\r\n    'Levi',\r\n    'Violet',\r\n    'Arthur',\r\n    'Mia',\r\n    'Thomas',\r\n    'Elizabeth'\r\n];\r\n\r\nexport interface UserData {\r\n    id: string;\r\n    name: string;\r\n    progress: string;\r\n    color: string;\r\n}\r\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n    const name =\r\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\r\n        ' ' +\r\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\r\n        '.';\r\n\r\n    return {\r\n        id: id.toString(),\r\n        name: name,\r\n        progress: Math.round(Math.random() * 100).toString(),\r\n        color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\r\n    };\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatTableModule } from '@angular/material';\r\nimport { MatFormFieldModule, MatPaginatorModule } from '@angular/material';\r\nimport { MatInputModule } from '@angular/material';\r\n\r\nimport { TablesRoutingModule } from './tables-routing.module';\r\nimport { TablesComponent } from './tables.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TablesRoutingModule,\r\n        MatTableModule,\r\n        MatFormFieldModule,\r\n        MatPaginatorModule,\r\n        MatInputModule\r\n    ],\r\n    declarations: [TablesComponent]\r\n})\r\nexport class TablesModule {}\r\n"],"sourceRoot":""}